"""empty message

Revision ID: b5de5bd2c848
Revises: 
Create Date: 2020-03-30 04:18:05.321779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b5de5bd2c848'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_booked_event_create_at', table_name='booked_event')
    op.drop_index('ix_booked_event_event_id', table_name='booked_event')
    op.drop_index('ix_booked_event_id', table_name='booked_event')
    op.drop_index('ix_booked_event_purchaser_id', table_name='booked_event')
    op.drop_index('ix_booked_event_updated_at', table_name='booked_event')
    op.drop_table('booked_event')
    op.drop_index('ix_address_city', table_name='address')
    op.drop_index('ix_address_id', table_name='address')
    op.drop_index('ix_address_region', table_name='address')
    op.drop_table('address')
    op.drop_index('ix_users_created_at', table_name='users')
    op.drop_index('ix_users_updated_at', table_name='users')
    op.drop_table('users')
    op.add_column('events', sa.Column('address', sa.String(), nullable=True))
    op.drop_column('events', 'organizer_id')
    op.drop_column('events', 'address_id')
    op.add_column('tickets', sa.Column('attender_email', sa.String(), nullable=True))
    op.drop_column('tickets', 'user_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tickets', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('tickets', 'attender_email')
    op.add_column('events', sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('events', sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('events', 'address')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index('ix_users_updated_at', 'users', ['updated_at'], unique=False)
    op.create_index('ix_users_created_at', 'users', ['created_at'], unique=False)
    op.create_table('address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='address_pkey')
    )
    op.create_index('ix_address_region', 'address', ['region'], unique=False)
    op.create_index('ix_address_id', 'address', ['id'], unique=False)
    op.create_index('ix_address_city', 'address', ['city'], unique=False)
    op.create_table('booked_event',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('purchaser_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='booked_event_pkey')
    )
    op.create_index('ix_booked_event_updated_at', 'booked_event', ['updated_at'], unique=False)
    op.create_index('ix_booked_event_purchaser_id', 'booked_event', ['purchaser_id'], unique=False)
    op.create_index('ix_booked_event_id', 'booked_event', ['id'], unique=False)
    op.create_index('ix_booked_event_event_id', 'booked_event', ['event_id'], unique=False)
    op.create_index('ix_booked_event_create_at', 'booked_event', ['create_at'], unique=False)
    # ### end Alembic commands ###
